{"ast":null,"code":"var _jsxFileName = \"F:\\\\codegym\\\\MD5\\\\QLBH\\\\fe\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { login } from \"../services/userService\";\nimport { Field, Form, Formik } from \"formik\";\nimport swal from \"sweetalert\";\nimport './login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const user = useSelector(state => {\n    return state.user.currentUser;\n  });\n  const handleLogin = async values => {\n    await dispatch(login(values)).then(e => {\n      if (e.payload !== 'Username is not existed' && e.payload !== 'Password is wrong') {\n        swal(`Well come, \"${e.payload.username}\"`, {\n          icon: \"success\"\n        });\n        navigate('/home');\n      } else {\n        navigate('/');\n      }\n    });\n  };\n  useEffect(() => {\n    localStorage.clear();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"square\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"square\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"square\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"square\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"square\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"square\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(Login, \"H8yKXfc1Yab7KHFGDBlYSlzca9s=\", false, function () {\n  return [useDispatch, useNavigate, useSelector];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["Link","useNavigate","useDispatch","useSelector","useEffect","login","Field","Form","Formik","swal","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","dispatch","navigate","user","state","currentUser","handleLogin","values","then","e","payload","username","icon","localStorage","clear","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["F:/codegym/MD5/QLBH/fe/src/pages/Login.js"],"sourcesContent":["import {Link, useNavigate} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useEffect} from \"react\";\r\nimport {login} from \"../services/userService\";\r\nimport {Field, Form, Formik} from \"formik\";\r\nimport swal from \"sweetalert\";\r\nimport './login.css'\r\n\r\n\r\nexport default function Login() {\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const user = useSelector(state=>{\r\n        return state.user.currentUser\r\n    })\r\n\r\n\r\n    const handleLogin = async (values) =>{\r\n        await dispatch(login(values)).then((e)=>{\r\n            if(e.payload !== 'Username is not existed' && e.payload !== 'Password is wrong'){\r\n                swal(`Well come, \"${e.payload.username}\"`, {\r\n                    icon: \"success\",\r\n                })\r\n                navigate('/home')\r\n            }else{\r\n                navigate('/')\r\n            }\r\n\r\n\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        localStorage.clear()\r\n    }, [])\r\n\r\n    return(\r\n        <>\r\n\r\n            <section>\r\n\r\n                <div className=\"box\">\r\n\r\n                    <div className=\"square\" ></div>\r\n                    <div className=\"square\" ></div>\r\n                    <div className=\"square\" ></div>\r\n                    <div className=\"square\" ></div>\r\n                    <div className=\"square\" ></div>\r\n                    <div className=\"square\" ></div>\r\n\r\n                   \r\n\r\n                </div>\r\n            </section>\r\n\r\n\r\n\r\n            {/*<div className=\"row\">*/}\r\n            {/*    <div className=\"offset-3 col-6 mt-5\">*/}\r\n            {/*        <h1 style={{textAlign:'center' }}>Login</h1>*/}\r\n            {/*        <Formik*/}\r\n            {/*            initialValues={{username:'', password:''}}*/}\r\n            {/*            onSubmit={(values)=>{*/}\r\n            {/*                handleLogin(values).then()*/}\r\n            {/*            }}>*/}\r\n            {/*            <Form>*/}\r\n            {/*                <div className=\"mb-3\">*/}\r\n            {/*                    <label htmlFor=\"exampleInput\" className=\"form-label\">Username</label>*/}\r\n            {/*                    <Field type=\"text\" className=\"form-control\" id=\"exampleInput\" name={'username'}/>*/}\r\n            {/*                    {*/}\r\n            {/*                        user === 'Username is not existed' &&*/}\r\n            {/*                        <>*/}\r\n            {/*                        <h6 style={{color: \"red\"}}>Username is not existed</h6>*/}\r\n            {/*                        </>*/}\r\n            {/*                    }*/}\r\n            {/*                </div>*/}\r\n\r\n            {/*                <div className=\"mb-3\">*/}\r\n            {/*                    <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Password</label>*/}\r\n            {/*                    <Field type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" name={'password'}/>*/}\r\n            {/*                    {*/}\r\n            {/*                        user === 'Password is wrong' &&*/}\r\n            {/*                        <>*/}\r\n            {/*                            <h6 style={{color: \"red\"}}>Password is wrong</h6>*/}\r\n            {/*                        </>*/}\r\n            {/*                    }*/}\r\n            {/*                </div>*/}\r\n\r\n            {/*                <button type=\"submit\" className=\"btn btn-primary\" style={{marginRight: 10}}>Login</button>*/}\r\n            {/*                <Link to={'/register'} ><button type=\"submit\" className=\"btn btn-secondary\">register</button></Link>*/}\r\n            {/*            </Form>*/}\r\n            {/*        </Formik>*/}\r\n\r\n\r\n            {/*    </div>*/}\r\n            {/*</div>*/}\r\n        </>\r\n    )\r\n}"],"mappings":";;AAAA,SAAQA,IAAI,EAAEC,WAAW,QAAO,kBAAkB;AAClD,SAAQC,WAAW,EAAEC,WAAW,QAAO,aAAa;AACpD,SAAQC,SAAS,QAAO,OAAO;AAC/B,SAAQC,KAAK,QAAO,yBAAyB;AAC7C,SAAQC,KAAK,EAAEC,IAAI,EAAEC,MAAM,QAAO,QAAQ;AAC1C,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAO,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGpB,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAMC,QAAQ,GAAGd,WAAW,EAAE;EAC9B,MAAMe,QAAQ,GAAGhB,WAAW,EAAE;EAC9B,MAAMiB,IAAI,GAAGf,WAAW,CAACgB,KAAK,IAAE;IAC5B,OAAOA,KAAK,CAACD,IAAI,CAACE,WAAW;EACjC,CAAC,CAAC;EAGF,MAAMC,WAAW,GAAG,MAAOC,MAAM,IAAI;IACjC,MAAMN,QAAQ,CAACX,KAAK,CAACiB,MAAM,CAAC,CAAC,CAACC,IAAI,CAAEC,CAAC,IAAG;MACpC,IAAGA,CAAC,CAACC,OAAO,KAAK,yBAAyB,IAAID,CAAC,CAACC,OAAO,KAAK,mBAAmB,EAAC;QAC5EhB,IAAI,CAAE,eAAce,CAAC,CAACC,OAAO,CAACC,QAAS,GAAE,EAAE;UACvCC,IAAI,EAAE;QACV,CAAC,CAAC;QACFV,QAAQ,CAAC,OAAO,CAAC;MACrB,CAAC,MAAI;QACDA,QAAQ,CAAC,GAAG,CAAC;MACjB;IAGJ,CAAC,CAAC;EACN,CAAC;EAEDb,SAAS,CAAC,MAAM;IACZwB,YAAY,CAACC,KAAK,EAAE;EACxB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIlB,OAAA,CAAAE,SAAA;IAAAiB,QAAA,eAEInB,OAAA;MAAAmB,QAAA,eAEInB,OAAA;QAAKoB,SAAS,EAAC,KAAK;QAAAD,QAAA,gBAEhBnB,OAAA;UAAKoB,SAAS,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAQ,eAC/BxB,OAAA;UAAKoB,SAAS,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAQ,eAC/BxB,OAAA;UAAKoB,SAAS,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAQ,eAC/BxB,OAAA;UAAKoB,SAAS,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAQ,eAC/BxB,OAAA;UAAKoB,SAAS,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAQ,eAC/BxB,OAAA;UAAKoB,SAAS,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAQ;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAI7B;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACA,iBA2CX;AAEX;AAACpB,EAAA,CAzFuBD,KAAK;EAAA,QACRZ,WAAW,EACXD,WAAW,EACfE,WAAW;AAAA;AAAAiC,EAAA,GAHJtB,KAAK;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}