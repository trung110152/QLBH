{"ast":null,"code":"/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.2.3): button.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport { defineJQueryPlugin } from './util/index';\nimport EventHandler from './dom/event-handler';\nimport BaseComponent from './base-component';\n\n/**\n * Constants\n */\n\nconst NAME = 'button';\nconst DATA_KEY = 'bs.button';\nconst EVENT_KEY = `.${DATA_KEY}`;\nconst DATA_API_KEY = '.data-api';\nconst CLASS_NAME_ACTIVE = 'active';\nconst SELECTOR_DATA_TOGGLE = '[data-bs-toggle=\"button\"]';\nconst EVENT_CLICK_DATA_API = `click${EVENT_KEY}${DATA_API_KEY}`;\n\n/**\n * Class definition\n */\n\nclass Button extends BaseComponent {\n  // Getters\n  static get NAME() {\n    return NAME;\n  }\n\n  // Public\n  toggle() {\n    // Toggle class and sync the `aria-pressed` attribute with the return value of the `.toggle()` method\n    this._element.setAttribute('aria-pressed', this._element.classList.toggle(CLASS_NAME_ACTIVE));\n  }\n\n  // Static\n  static jQueryInterface(config) {\n    return this.each(function () {\n      const data = Button.getOrCreateInstance(this);\n      if (config === 'toggle') {\n        data[config]();\n      }\n    });\n  }\n}\n\n/**\n * Data API implementation\n */\n\nEventHandler.on(document, EVENT_CLICK_DATA_API, SELECTOR_DATA_TOGGLE, event => {\n  event.preventDefault();\n  const button = event.target.closest(SELECTOR_DATA_TOGGLE);\n  const data = Button.getOrCreateInstance(button);\n  data.toggle();\n});\n\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(Button);\nexport default Button;","map":{"version":3,"names":["defineJQueryPlugin","EventHandler","BaseComponent","NAME","DATA_KEY","EVENT_KEY","DATA_API_KEY","CLASS_NAME_ACTIVE","SELECTOR_DATA_TOGGLE","EVENT_CLICK_DATA_API","Button","toggle","_element","setAttribute","classList","jQueryInterface","config","each","data","getOrCreateInstance","on","document","event","preventDefault","button","target","closest"],"sources":["F:/codegym/MD5/QLBH/fe/node_modules/bootstrap/js/src/button.js"],"sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.2.3): button.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport { defineJQueryPlugin } from './util/index'\nimport EventHandler from './dom/event-handler'\nimport BaseComponent from './base-component'\n\n/**\n * Constants\n */\n\nconst NAME = 'button'\nconst DATA_KEY = 'bs.button'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst DATA_API_KEY = '.data-api'\n\nconst CLASS_NAME_ACTIVE = 'active'\nconst SELECTOR_DATA_TOGGLE = '[data-bs-toggle=\"button\"]'\nconst EVENT_CLICK_DATA_API = `click${EVENT_KEY}${DATA_API_KEY}`\n\n/**\n * Class definition\n */\n\nclass Button extends BaseComponent {\n  // Getters\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n  toggle() {\n    // Toggle class and sync the `aria-pressed` attribute with the return value of the `.toggle()` method\n    this._element.setAttribute('aria-pressed', this._element.classList.toggle(CLASS_NAME_ACTIVE))\n  }\n\n  // Static\n  static jQueryInterface(config) {\n    return this.each(function () {\n      const data = Button.getOrCreateInstance(this)\n\n      if (config === 'toggle') {\n        data[config]()\n      }\n    })\n  }\n}\n\n/**\n * Data API implementation\n */\n\nEventHandler.on(document, EVENT_CLICK_DATA_API, SELECTOR_DATA_TOGGLE, event => {\n  event.preventDefault()\n\n  const button = event.target.closest(SELECTOR_DATA_TOGGLE)\n  const data = Button.getOrCreateInstance(button)\n\n  data.toggle()\n})\n\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(Button)\n\nexport default Button\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,kBAAkB,QAAQ,cAAc;AACjD,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,aAAa,MAAM,kBAAkB;;AAE5C;AACA;AACA;;AAEA,MAAMC,IAAI,GAAG,QAAQ;AACrB,MAAMC,QAAQ,GAAG,WAAW;AAC5B,MAAMC,SAAS,GAAI,IAAGD,QAAS,EAAC;AAChC,MAAME,YAAY,GAAG,WAAW;AAEhC,MAAMC,iBAAiB,GAAG,QAAQ;AAClC,MAAMC,oBAAoB,GAAG,2BAA2B;AACxD,MAAMC,oBAAoB,GAAI,QAAOJ,SAAU,GAAEC,YAAa,EAAC;;AAE/D;AACA;AACA;;AAEA,MAAMI,MAAM,SAASR,aAAa,CAAC;EACjC;EACA,WAAWC,IAAIA,CAAA,EAAG;IAChB,OAAOA,IAAI;EACb;;EAEA;EACAQ,MAAMA,CAAA,EAAG;IACP;IACA,IAAI,CAACC,QAAQ,CAACC,YAAY,CAAC,cAAc,EAAE,IAAI,CAACD,QAAQ,CAACE,SAAS,CAACH,MAAM,CAACJ,iBAAiB,CAAC,CAAC;EAC/F;;EAEA;EACA,OAAOQ,eAAeA,CAACC,MAAM,EAAE;IAC7B,OAAO,IAAI,CAACC,IAAI,CAAC,YAAY;MAC3B,MAAMC,IAAI,GAAGR,MAAM,CAACS,mBAAmB,CAAC,IAAI,CAAC;MAE7C,IAAIH,MAAM,KAAK,QAAQ,EAAE;QACvBE,IAAI,CAACF,MAAM,CAAC,EAAE;MAChB;IACF,CAAC,CAAC;EACJ;AACF;;AAEA;AACA;AACA;;AAEAf,YAAY,CAACmB,EAAE,CAACC,QAAQ,EAAEZ,oBAAoB,EAAED,oBAAoB,EAAEc,KAAK,IAAI;EAC7EA,KAAK,CAACC,cAAc,EAAE;EAEtB,MAAMC,MAAM,GAAGF,KAAK,CAACG,MAAM,CAACC,OAAO,CAAClB,oBAAoB,CAAC;EACzD,MAAMU,IAAI,GAAGR,MAAM,CAACS,mBAAmB,CAACK,MAAM,CAAC;EAE/CN,IAAI,CAACP,MAAM,EAAE;AACf,CAAC,CAAC;;AAEF;AACA;AACA;;AAEAX,kBAAkB,CAACU,MAAM,CAAC;AAE1B,eAAeA,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}