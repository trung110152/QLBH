{"ast":null,"code":"var _jsxFileName = \"F:\\\\codegym\\\\MD5\\\\QLBH\\\\fe\\\\src\\\\pages\\\\Register.js\",\n  _s = $RefreshSig$();\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { ErrorMessage, Field, Form, Formik } from \"formik\";\nimport { useDispatch } from \"react-redux\";\nimport { register } from \"../services/userService\";\nimport { useState } from \"react\";\nimport swal from 'sweetalert';\nimport * as Yup from \"yup\";\nimport { addOrder } from \"../services/orderService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n  const validateSchema = Yup.object().shape({\n    username: Yup.string().min(6, \"Too Short! Username must be longer than 6 characters\").max(50, \"Too Long!\").required(\"Required\"),\n    password: Yup.string().min(6, \"Too Short! Password must be longer than 6 characters\").max(50, \"Too Long!\").required(\"Required\")\n  });\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [check, setCheck] = useState([]);\n  const handleRegister = values => {\n    dispatch(register(values)).then(e => {\n      if (e.payload !== 'Username registered') {\n        swal(\"Register Success!\", {\n          icon: \"success\"\n        });\n        let order = {\n          idUser: e.payload.id,\n          receiver: e.payload.username,\n          address: 'hd',\n          phone: 0,\n          time: '2023-02-24 00:29:52',\n          totalPoint: 0,\n          status: 'buying'\n        };\n        dispatch(addOrder(order));\n        navigate('/');\n      } else {\n        setCheck(1);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"offset-3 col-6 mt-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            textAlign: 'center'\n          },\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            username: '',\n            password: ''\n          },\n          validationSchema: validateSchema,\n          onSubmit: values => {\n            handleRegister(values);\n          },\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"exampleInput\",\n                className: \"form-label\",\n                children: \"Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                type: \"text\",\n                className: \"form-control\",\n                id: \"exampleInput\",\n                name: 'username'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                style: {\n                  color: \"red\"\n                },\n                children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: 'username'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 55\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 28\n              }, this), check === 1 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"h6\", {\n                  style: {\n                    color: \"red\"\n                  },\n                  children: \"Username registered!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"exampleInputPassword1\",\n                className: \"form-label\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                type: \"password\",\n                className: \"form-control\",\n                id: \"exampleInputPassword1\",\n                name: 'password'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                style: {\n                  color: \"red\"\n                },\n                children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: 'password'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 55\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              style: {\n                marginRight: 10\n              },\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: '/',\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-secondary\",\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(Register, \"9sI3vMRTrE3OajbesEy3gOjEB08=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["Link","useNavigate","ErrorMessage","Field","Form","Formik","useDispatch","register","useState","swal","Yup","addOrder","jsxDEV","_jsxDEV","Fragment","_Fragment","Register","_s","validateSchema","object","shape","username","string","min","max","required","password","dispatch","navigate","check","setCheck","handleRegister","values","then","e","payload","icon","order","idUser","id","receiver","address","phone","time","totalPoint","status","children","className","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","initialValues","validationSchema","onSubmit","htmlFor","type","name","color","marginRight","to","_c","$RefreshReg$"],"sources":["F:/codegym/MD5/QLBH/fe/src/pages/Register.js"],"sourcesContent":["import {Link, useNavigate} from \"react-router-dom\";\r\nimport {ErrorMessage, Field, Form, Formik} from \"formik\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {register} from \"../services/userService\";\r\nimport {useState} from \"react\";\r\nimport swal from 'sweetalert';\r\nimport * as Yup from \"yup\";\r\nimport {addOrder} from \"../services/orderService\";\r\n\r\n\r\nexport default function Register() {\r\n\r\n    const validateSchema = Yup.object().shape({\r\n        username: Yup.string()\r\n            .min(6, \"Too Short! Username must be longer than 6 characters\")\r\n            .max(50, \"Too Long!\")\r\n            .required(\"Required\"),\r\n        password: Yup.string()\r\n            .min(6, \"Too Short! Password must be longer than 6 characters\")\r\n            .max(50, \"Too Long!\")\r\n            .required(\"Required\"),\r\n    })\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const [check,setCheck] = useState([])\r\n\r\n    const handleRegister = (values)=>{\r\n        dispatch(register(values)).then((e)=>{\r\n            if(e.payload !== 'Username registered'){\r\n                swal(\"Register Success!\", {\r\n                    icon: \"success\",\r\n                });\r\n                let order = {\r\n                    idUser: e.payload.id,\r\n                    receiver: e.payload.username,\r\n                    address: 'hd',\r\n                    phone: 0,\r\n                    time: '2023-02-24 00:29:52',\r\n                    totalPoint: 0,\r\n                    status: 'buying'\r\n                }\r\n                dispatch(addOrder(order))\r\n\r\n                navigate('/')\r\n            }else {\r\n                setCheck(1)\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <div className=\"row\">\r\n                <div className=\"offset-3 col-6 mt-5\">\r\n                    <h1 style={{textAlign:'center' }}>Register</h1>\r\n                    <Formik\r\n                    initialValues={{\r\n                        username: '',\r\n                        password: ''\r\n                    }}\r\n\r\n                    validationSchema={validateSchema}\r\n\r\n                    onSubmit={(values)=>{handleRegister(values)}}>\r\n                    <Form>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"exampleInput\" className=\"form-label\">Username</label>\r\n                            <Field type=\"text\" className=\"form-control\" id=\"exampleInput\" name={'username'}/>\r\n                           <h6 style={{color: \"red\"}}><ErrorMessage name={'username'} ></ErrorMessage></h6>\r\n                            { check === 1 &&\r\n                            <>\r\n                            <h6 style={{color: \"red\"}}>Username registered!</h6></>}\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Password</label>\r\n                            <Field type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" name={'password'}/>\r\n                            <h6 style={{color:\"red\"}}><ErrorMessage name={'password'}></ErrorMessage></h6>\r\n                        </div>\r\n                        <button type=\"submit\" className=\"btn btn-primary\" style={{marginRight: 10}}>Register</button>\r\n                        <Link to={'/'} ><button type=\"submit\" className=\"btn btn-secondary\">Login</button></Link>\r\n                    </Form>\r\n                    </Formik>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}